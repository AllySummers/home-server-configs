$schema: 'https://www.schemastore.org/traefik-v3.json'
experimental:
  plugins:
    themepark:
      moduleName: 'github.com/packruler/traefik-themepark'
      version: 'v1.4.2'
    traefik-oidc-auth:
      moduleName: 'github.com/sevensolutions/traefik-oidc-auth'
      version: 'v0.12.0'
    inlineResponse:
      moduleName: github.com/tuxgal/traefik_inline_response
      version: v0.1.2
    validate-headers:
      moduleName: 'github.com/frankforpresident/traefik-plugin-validate-headers'
      version: 'v0.0.3'
api:
  dashboard: true
  debug: true
  insecure: true
entryPoints:
  web:
    address: ':80'
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
          permanent: true
  websecure:
    address: ':443'
    asDefault: true
    http:
      middlewares:
        - strip-headers

serversTransport:
  insecureSkipVerify: true
providers:
  docker:
    endpoint: 'unix:///var/run/docker.sock'
    exposedByDefault: false
  file:
    directory: /dynamic
    # debugLogGeneratedTemplate: true # optional - logs the rendered config for debugging
    watch: true

certificatesResolvers:
  cloudflare:
    acme:
      # caServer: https://acme-v02.api.letsencrypt.org/directory # production (default)
      # caServer: https://acme-staging-v02.api.letsencrypt.org/directory # staging (testing)
      email: you@example.com # Cloudflare email (or other provider)
      storage: acme.json
      keyType: RSA4096
      dnsChallenge:
        provider: cloudflare
        propagation:
          # skip the “Did it propagate?” check (if you trust Cloudflare's API)
          disableChecks: true
        resolvers:
          - '1.1.1.1:53'
          - '1.0.0.1:53'
        delayBeforeCheck: '10' # Optional to wait x second before checking with the DNS Server

log:
  # level: 'DEBUG'
  filePath: '/var/log/traefik/traefik.log'
# accessLog:
# filePath: '/var/log/traefik/access.log'
